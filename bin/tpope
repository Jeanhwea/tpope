#!/bin/sh
# $Id$
# -*- sh -*- vim: ft=sh sw=4 sts=4

# This is a multipurpose script that is easier to copy around than 30-odd
# single purpose ones.  If a function grows too big, it earns its own file,
# and this script is modified to call that file instead.

# Of particular interest here is the start/restart/etc functions, which call
# the appropriate script in /etc/init.d, the install function, which does
# various tasks involved with moving in (such as setting up a crontab and
# changing my login shell), and the cron function, which calls my installer
# script, cleans up temp files, and optionally downloads my latest set of
# configuration files.

[ -z "$PATH" ] && PATH="$HOME/bin:/usr/local/bin:/usr/bin:/bin"

basename="`basename $0`"
if [ "$basename" = tpope -o "$basename" = tp -o "$basename" = t ]; then
    tpope="$basename " basename="$1"
    shift
fi

rcd=/etc/init.d
[ -d "$rcd" ] || rcd=/etc/rc.d

words="cat /usr/share/dict/words"
Words="cat /usr/share/dict/words"
[ -f "$HOME/text/scrabble" ] && words="cat $HOME/text/scrabble"

hostname="`hostname|sed -e 's/[.].*//'`"
[ "`whoami`" != root -a "`id -u`" -ne 0 ] && sudo="sudo -H"

inpath() { [ -x "`which "$1" 2>/dev/null`" ]; }

wordtrans() { echo "$1"|sed -e 's/-/[-A-Za-z0-9]/g'; }

root_init() {
    if [ "`whoami`" != root -a "`id -u`" -ne 0 ]; then
	if inpath sudo && sudo -l >/dev/null 2>&1; then
	    as_root() {
		if [ "$1" = exec ]; then ex="exec"; shift; fi
		$ex sudo "$@"
	    }
	else
	    echo "Warning: sudo not installed or not configured" >&2
	    as_root() {
		if [ "$1" = exec ]; then ex="exec"; shift; fi
		$ex su -c "$*"
	    }
	fi
    else
	as_root() { "$@" ; }
    fi
}

no_links() {
    if [ -h "$HOME/bin/$basename" ]; then
	echo "Error: this alias cannot be a symlink." >&2
	echo "Remove $HOME/bin/$basename and try again." >&2
	exit 1
    fi
}

most_recent() {
    prog="$1"
    shift
    file="`ls -1t "$@" 2>/dev/null|head -1`"
    if [ -f "$file" ]; then
	exec "$prog" "$file"
    else
	exec "$prog"
    fi
}

do_media() {
    exec "$HOME/bin/media" "$@"
}

try_libtrash() {
	case "$LD_PRELOAD" in *libtrash*) ;; *)
	if [ -f /usr/lib/libtrash/libtrash.so -a -f "$HOME/.libtrash" ]; then
	   LD_PRELOAD="$LD_PRELOAD${LD_PRELOAD:+:}/usr/lib/libtrash/libtrash.so"
	   export LD_PRELOAD
	fi ;; esac
	"$@"
}

do_clean() {
	if [ "$1" = -v ]; then
	    FIND()    { find "$@" ! -type d -print 2>/dev/null; }
	    FINDDIR() { find "$@" -mindepth 1 -type d -print 2>/dev/null; }
	    shift
	else
	    FINDDIR() { find "$@" -mindepth 1 -type d -print0 2>/dev/null | \
		    xargs -r0 rmdir >/dev/null 2>&1; }
	    if inpath wipe; then
		FIND()    { find "$@" ! -type d -print0 2>/dev/null | \
			xargs -r0 wipe -fcsq >/dev/null 2>&1; }
	    else
		FIND()    { find "$@" ! -type d -print0 2>/dev/null | \
			xargs -r0 rm >/dev/null 2>&1; }
	    fi
	fi
	case "$1" in
	    1|2|3|4|5) unit=$1 ;;
	    '') unit=4 ;;
	    *) echo "Usage: $tpope$basename [-v] [1-5]" >&2; exit 1 ;;
	esac
	unset LD_PRELOAD
	PROTECT_TRASH=NO
	export PROTECT_TRASH
	FIND "$HOME" \( -path /media -o -path /priv \) -prune -o \( -name "*~" -o -name ".*~" -o -name ".*.sw?" -o -name .viminfo -o -name .zcompdump -o -name "*.aux" -o -name "*.blg" -o -name ".*.bak" \) \( -mtime +`expr $unit \* 30` -o -user root -ctime +1 \)
	FIND "/tmp" "/var/tmp" "$HOME/tmp" -user "$LOGNAME" -mtime +`expr $unit \* 30`
	FIND "$HOME/.trash" -atime +`expr $unit \* 15`
	FIND "$HOME/.trash" -amin +`expr \( $unit - 1 \) \* 360` \( -size +8192k -o -name '*.jpg' \)
	FIND "$HOME/.trash" -amin +`expr \( $unit - 1 \) \* 5` -size +65536k
	FINDDIR "$HOME/.trash" -mtime +`expr $unit \* 1` -empty
	if [ ! -d "$HOME/.trash" ]; then
	    mkdir "$HOME/.trash" && chmod 0700 "$HOME/.trash"
	fi
	rm -f "$HOME/bin/xauth-get" "$HOME/bin/start" "$HOME/bin/stop" "$HOME/bin/restart" "$HOME/bin/reload" "$HOME/bin/force-reload" "$HOME/bin/runcontrol" "$HOME/bin/launch" "$HOME/bin/www-browser" "$HOME/bin/ps-grep" "$HOME/.shinit"
	return 0
}

do_install() {
    "$HOME/bin/installer" "$@"
}

display_manage() {
    # Disables DPMS and xscreensaver for the duration of a programs execution
    [ "$DISPLAY" ] || DISPLAY=:0
    xset=xset
    [ -z "`which xset 2>/dev/null`" ] && xset=/usr/bin/X11/xset
    dpms="`$xset q 2>/dev/null|grep 'Monitor is'|sed -e 's/^ *Monitor is.* \([A-Za-z]*\)$/\1/'|tr 'A-Z' 'a-z'`"
    case "$dpms" in
	on|standby|suspend|off) ;;
	*) dpms=on ;;
    esac
    #$xset dpms force on
    while kill -0 $$ 2>/dev/null; do
	xscreensaver-command -deactivate >/dev/null 2>&1
	sleep 55
    done &
    "$@"
    ret=$?
    $xset dpms force $dpms
    return $?
}

case "$basename" in

    aliases)
	aliases="launch lt lv dm pg sb sursync ruptime rwho installer \
	rclink rc start stop restart reload force-reload \
	tomorrow vnc xssc mpl mpa mount shutdown whois char \
	word ord wor or Word Ord Wor Or"
	for app in apt-get aptitude emerge cardctl aumix feh rsync rubber xdvi xpdf gv; do
	    inpath $app && [ ! -h "$HOME/bin/$app" ] && aliases="$aliases $app"
	done
	echo $aliases
	exit 0 ;;
    
    rehash) if [ "$hostname" = marge ]; then
	pkill -HUP away-tpope 2>/dev/null || away-tpope -d
    else
	exec hostinfo -S marge -ax tpope $basename
    fi ;;
    activity|away|out|status)
	if [ "$hostname" != marge ] && ping -c 1 marge >/dev/null 2>&1; then
	    [ "$#" = 1 -a -z "$1" ] && exec hostinfo -S marge -ax tpope $basename -c
	    exec hostinfo --batch-ssh marge tpope $basename "$@"
	elif [ "$#" = 0 ]; then
	    [ "$basename" = out ] && basename=away
	    cat "$HOME/.$basename" 2>/dev/null
	    exit
	elif [ -x "$HOME/bin/away-tpope" -a $basename != status ]; then
	    exec away-tpope $basename "$@"
	else
	    exit 2
	fi
	;;

    char) case "$1" in
	?) perl -e 'print ord('"'$1'"'), "\n"' ;;
	[0-9]?*) perl -e 'print chr('"$1"'), "\n"' ;;
	*) exit 1 ;;
    esac ;;

    chat) if [ -z "$*" ]; then
	    exec hostinfo -S marge -t '$HOME/.irssi/Chat-script' $hostname
	else
	    exec hostinfo -S marge -t '$HOME/.irssi/Chat-script' "$@"
	fi ;;

    clean) do_clean "$@" ;;

    cron)
	[ ! -x "`which renice 2>/dev/null`" ] || renice 12 $$ >/dev/null 2>&1
	if [ "$1" = --login ]; then
	    [ ! -x "`which nice 2>/dev/null`" ] || nice="nice"
	    ($nice find "$HOME" -maxdepth 1 -name ". tpope" -mtime +8 -exec tpope cron \; || $nice find "$HOME" -name ". tpope" -mtime +8 -exec tpope cron \;) 2>/dev/null &
	    # The part after the || is for versions of find that don't support
	    # -maxdepth, such as busybox
	    exit 0
	fi
	do_install >/dev/null; do_clean 5
	find "$HOME" -maxdepth 1 -name ".autodl" -mtime +30 -exec sh -c 'sync-tpope -W && touch "$HOME/.autodl"' \; 2>/dev/null
	touch "$HOME/. tpope"
    ;;

    display-manage|dm) display_manage "$@" ;;
    mpl) display_manage mplayer -fs -loop 0 "$@" ;;
    mpa) DISPLAY=  mplayer -quiet -vo fb,aa "$@" ;;

    launch)
	exec >/dev/null 2>&1 </dev/null
	if [ "$1" = "-dm" -o "$1" = "-md" ]; then
	    shift
	    pidof -x "$1" >/dev/null && exit 0
	    prefix="tpope display-manage"
	fi
	if [ "$1" = "-d" ]; then
	    shift
	    pidof -x "$1" >/dev/null && exit 0
	fi
	if [ "$1" = "-m" ]; then
	    shift
	    prefix="tpope display-manage"
	fi
	for arg in "$2" "$3" "$4"; do
	    case "$arg" in
		/*) [ -e "$arg" ] && dontcd=1 ;;
		-*) [ -e "$arg" ] && dontcd=1 ;;
		*) ;;
	    esac
	done
	[ "$dontcd" ] || cd
	$prefix "$@" &
	exit 0
    ;;

    logview|lv)
	[ "$PAGER" ] || PAGER=more
	# Pager should already be set or something is wrong
	cd /var/log
	root=
	for file in "$@"; do
	    [ -f "$file" -a ! -r "$file" ] && root=as_root
	done
	[ -z "$root" ] || root_init
	$root exec $PAGER +G "$@"
	;;

    ps-grep|pg)
    if [ "`uname`" = Linux -o ! -x /usr/bin/ps ]; then
	ps uf|head -1
	exec ps auxf|egrep -v 'grep\>|\<pg\>'|sed -ne '2,$p'|egrep "$@"
    else
	/usr/bin/ps -f|head -1
	exec /usr/bin/ps -ef|egrep -v 'grep\>|\<pg\>'|sed -ne '2,$p'|egrep "$@"
    fi
    ;;

    rclink|link)
	if [ "$#" -eq 0 -o "$#" -gt 4 ]; then
		echo "Usage: $tpope$basename <init-script> [ <start-levels> [ <start> [ <stop> ] ] ]"
		exit 1
	fi
	root_init
	sed -ne '/# chkconfig: /s///p' "/etc/init.d/$1" \
	    2>/dev/null |read run start stop trash
	[ "$stop" ] || run=2345 start=20 stop=20
	[ -z "$2" ] || run="$2"
	[ -z "$3" ] || start="$3" stop="$3"
	[ -z "$4" ] || stop="$4"
	for i in 0 1 2 3 4 5 6; do
	    as_root rm -f /etc/rc$i.d/[SK][0-9][0-9]"$1"
	    case $run in
		[Xx])   ;;
		*$i*) as_root ln -s "../init.d/$1" "/etc/rc$i.d/S$start$1" ;;
		*)    as_root ln -s "../init.d/$1" "/etc/rc$i.d/K$stop$1" ;;
	    esac
	done
	exit 0
    ;;

    runcontrol|rc) root_init
	if [ "`expr $# % 2`" -ne 0 -o "$#" -eq 0 ]; then
		echo "Usage: $tpope$basename <action> <init-script> [ <action> <init-script> [ ... ] ]"
		exit 1
	fi
	while [ "$#" -gt 0 ]; do
	    as_root "$rcd/$2" "$1"
	    shift 2
	done
	exit 0
    ;;

    sensible-browser|sb) exec "$HOME/bin/sensible-browser" "$@" ;;
    sensible-pager|sp)
	term=exec
	if [ ! -t 0 -a ! -t 1 -a "$DISPLAY" ]; then
	    term="x-terminal-emulator -title Pager -e"
	    if [ -z "$1" -o "$1" = - ]; then
		tempfile=/tmp/sensible-pager.$$
		cat > $tempfile
		#if inpath lesspipe; then
		#    echo FUCK >&2
		#    lesspipe $tempfile > $tempfile.2
		#    [ -s $tempfile.2 ] && mv $tempfile.2 $tempfile
		#    rm -f $tempfile.2
		#fi
		[ "$1" = - ] && shift
	    fi
	fi
	if inpath less; then
	    inpath lesspipe && LESSOPEN='|lesspipe %s'
	    export LESSOPEN
	    pager="less -R"
	elif inpath more; then
	    pager="more"
	elif inpath pg; then
	    pager="pg"
	else
	    pager="cat"
	fi
	if [ ! "$tempfile" ]; then
	    $term $pager "$@"
	else
	    $term $pager "$tempfile"
	    rm "$tempfile"
	fi
	;;
    
    sensible-editor|se)
	term=exec
	if [ "$DISPLAY" -a ! -t 0 ]; then
	    inpath gvim && exec gvim -f "$@"
	    term="exec x-terminal-emulator -title Editor -e"
	fi
	if inpath gvim; then
	    $term vim -X "$@"
	elif inpath vim; then
	    $term vim "$@"
	elif inpath vi; then
	    $term vi "$@"
	elif inpath nano; then
	    $term nano "$@"
	else
	    echo 'No editor found!' >&2
	    exit 1
	fi ;;

    x-terminal-emulator|xterm) exec "$HOME/bin/x-terminal-emulator" "$@" ;;

    start|stop|restart|reload|force-reload) root_init
	for daemon in "$@"; do
	    as_root "$rcd/$daemon" "$basename"
	done
	[ -z "$*" -a "$basename" = stop ] && do_media stop && exit 0
	[ "$*" ]
	exit
    ;;

    hostinfo) exec "$HOME/bin/hostinfo" "$@" ;;
    ruptime)  exec "$HOME/bin/hostinfo" -u "$@" ;;
    rwho)     exec "$HOME/bin/hostinfo" -w "$@" ;;
    ssh)      exec "$HOME/bin/hostinfo" --ssh "$@" ;;

    libtrash|lt) try_libtrash "$@" ;;

    install|installer) do_install "$@" ;;

    _root_installer)
	[ "$1" ] || exit 1
	PATH="/usr/local/sbin:/usr/sbin:/sbin:$PATH"
	for group in adm src dip dialout floppy cdrom video audio disk; do
	    line="`grep ^$group: /etc/group`"
	    case "$line" in
		'') ;;
		*"$1"*) ;;
		*) adduser "$1" $group >/dev/null 2>&1 && didgroup=1 ;;
	    esac
	done
	[ -z "$didgroup" ] || echo "Added to groups."
	;;

    soffice)
	if [ ! -d "$HOME/.openoffice" ]; then
	    echo "Sorry, OpenOffice.org not installed." >&2
	    exit 1
	fi
	ver=`ls "$HOME/.openoffice"|tail -1`
	exec "$HOME/.openoffice/$ver/soffice" "$@"
	;;

    media) do_media "$@"; exit ;;
    
    [Qq]uit|Stop|[Pp]lay|[Pp]ause|[Rr]esume|[Tt]oggle|[Nn]ext|[Pp]rev|[Ff]fwd|[Rr]ew) do_media "$basename" "$@"; exit ;;

    sursync|suscp)
    for arg in "$@"; do
	case "$arg" in
	    [!-]*:*) ssh -axqt "`echo $arg|sed -e 's/:.*//'`" sudo -v -p "\"%u@%h's sudo password:\"" || exit ;;
	esac
    done
    args=-uCP
    [ "$basename" = suscp ] && args=-P
    exec sudo -p "%u@%h's sudo password:" rsync $args -e "ssh -axF $HOME/.ssh/config -i $HOME/.ssh/id_rsa" --rsync-path="sudo rsync" "$@"
    ;;

    sync-tpope|sync) if [ "$#" = 0 ]; then
			exec "$HOME/bin/sync-tpope" -W
		    else
			exec "$HOME/bin/sync-tpope" "$@"
		    fi ;;

    temperature) webget="curl -m8 -s"
	[ ! -x "`which wget 2>/dev/null`" ] || webget="wget -t1 -T8 -qO -"
	temp="`$webget http://weather.noaa.gov/weather/current/${1:-KSAT}.html 2>/dev/null| grep -A 2 ' Temperature ' | tail -1 | awk '{print $3}'`"
	case "$temp" in
	    ?????*) echo "$temp" ;;
	    ????)  echo " $temp" ;;
	    ???)  echo "  $temp" ;;
	    ??)  echo "   $temp" ;;
	    *) echo " --$temp.-" ;;
	esac
	;;

    tomorrow) today --date=tomorrow "$@" ;;

    url)
	if [ "$*" = "-" ]; then
	    url="`cat`"
	else
	    url="$*"
	fi
	if [ ! -e "$url" ]; then
	case url in
	    /*|./*) ;;
	    *://*|*.*.*/*) url="`echo $url|tr -d ' \t\n\r\f'`" ;;
	    *) url="http://www.google.com/search?q=`echo $url|sed -e 's/%/%25/g' -e 's/+/%2B/g' -e 's/ /+/g' -e 's/&/%26/g' -e 's/=/%3D/g'`" ;;
	esac
	fi
    exec "$HOME/bin/sensible-browser" "$url" ;;

    vnc)
    if [ -f "$HOME/.vnc/$1" ]; then
	exec xvncviewer -passwd "$HOME/.vnc/$1" "$@"
    else
	exec xvncviewer "$@"
    fi
    exit 1
    ;;

    word) w="`wordtrans "$1"`"; shift; $words | egrep -i "^$w\$" "$@" ;;
    ord)  w="`wordtrans "$1"`"; shift; $words | egrep -i "$w\$" "$@" ;;
    wor)  w="`wordtrans "$1"`"; shift; $words | egrep -i "^$w" "$@" ;;
    or)   w="`wordtrans "$1"`"; shift; $words | egrep -i "$w" "$@" ;;
    Word) w="`wordtrans "$1"`"; shift; $Words | egrep "^$w\$" "$@" ;;
    Ord)  w="`wordtrans "$1"`"; shift; $Words | egrep "$w\$" "$@" ;;
    Wor)  w="`wordtrans "$1"`"; shift; $Words | egrep "^$w" "$@" ;;
    Or)   w="`wordtrans "$1"`"; shift; $Words | egrep "$w" "$@" ;;

    xauth-get) exec hostinfo --batch-ssh "$1" xauth extract - "$1:0"|xauth merge - ;;
    xssc|xscc)
	case "$DISPLAY" in localhost:*|'') DISPLAY=:0 ;; esac
	export DISPLAY
	exec xscreensaver-command "$@" ;;

    lock)
	case "$DISPLAY" in localhost:*|'') DISPLAY=:0 ;; esac
	export DISPLAY
	xset=xset
	[ -z "`which xset 2>/dev/null`" ] && xset=/usr/bin/X11/xset
	xscreensaver-command -version >/dev/null||exit 1
	if xscreensaver-command -time 2>/dev/null|egrep 'non-blanked|no saver status|locked' >/dev/null; then
	    :
	else
	    xscreensaver-command -lock
	    xset dpms force off
	fi
	;;

    unlock)
	case "$DISPLAY" in localhost:*|'') DISPLAY=:0 ;; esac
	export DISPLAY
	xset=xset
	[ -z "`which xset 2>/dev/null`" ] && xset=/usr/bin/X11/xset
	xscreensaver-command -version >/dev/null||exit 1
	if xscreensaver-command -time 2>/dev/null|egrep 'locked' >/dev/null; then
	    dpms="`$xset q 2>/dev/null|grep 'Monitor is'|sed -e 's/^ *Monitor is.* \([A-Za-z]*\)$/\1/'|tr 'A-Z' 'a-z'`"
	    [ "$dpms" = on ] && $xset dpms force standby
	    skill xscreensaver
	    xscreensaver -no-splash >/dev/null 2>&1 &
	    xscreensaver-command -activate >/dev/null 2>&1 &
	    xscreensaver-command -throttle >/dev/null 2>&1 &
	    [ "$dpms" = on ] && sleep 2 && $xset dpms force $dpms
	fi
	exit 0
	;;

    mount|cdrecord|shutdown) no_links
	case "$1" in
	    '') exec "$basename" "$@" ;;
	    *) root_init; as_root exec "$basename" "$@" ;;
	esac ;;
    emerge|aptitude) no_links
	case "$1" in
	    search) exec "$basename" "$@" ;;
	    *) root_init; as_root exec "$basename" "$@" ;;
	esac ;;
    apt-get) no_links
	case "$1" in
	    source) exec "$basename" "$@" ;;
	    *) root_init; as_root exec "$basename" "$@" ;;
	esac ;;
    cardctl) no_links
	case "$1" in
	    status|config|ident|info|'') exec "$basename" "$@" ;;
	    *) root_init; as_root exec "$basename" "$@" ;;
	esac ;;

    aumix) no_links
	if [ "$#" = 0 ]; then exec aumix -C; else exec aumix "$@"; fi ;;
    feh) no_links
	try_libtrash feh -Z "$@" ;;
    rsync) no_links
	exec rsync -uCP "$@" ;;
    rubber) no_links
	if [ "$*" ]; then
	    exec rubber "$@"
	elif [ '*.tex' != "`echo *.tex`" ]; then
	    exec rubber *.tex
	else
	    exec rubber
	fi;;
    xdvi) no_links
	[ "$#" = 0 ] ||exec xdvi "$@"; most_recent xdvi *.dvi;;
    xpdf) no_links
	[ "$#" = 0 ] ||exec xpdf "$@"; most_recent xpdf *.pdf "$HOME"/dl/*.pdf;;
    gv) no_links
	[ "$#" = 0 ] ||exec gv "$@"; most_recent gv *.pdf *.ps;;
    rm) no_links
	if [ -f /usr/lib/libtrash/libtrash.so -a -f "$HOME/.libtrash" ]; then
	    try_libtrash rm "$@"
	else
	    exec rm -i "$@"
	fi ;;

    whois)
	#no_links
	if [ "$1" != "-H" ]; then
	    exec whois -H "$@"
	else
	    exec /usr/bin/whois "$@"
	fi ;;

    '') echo "Usage: `basename $0` <command> [options]" ;;
    *) echo "$basename: unknown command." >&2 ;;
esac
